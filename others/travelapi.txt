#lets talk API

Features:
Register=>CREATE
 create a new user with fields

 full_name=>jyoti sharma
 address=>budhanilakhantha
 email=>jyoti@gmail.com
 
 password=>parjajja


    
Login=>RETRIVE
=>email,password
    return True or False


view trek destination=>R
add trek destination=>C
view iternaries=>V
add iternaries=>C

CRUD:
database  =>    HTTP methods
CREATE          POST
RETRIVE         GET
UPDATE          PUT
Delete          DELETE

API:
REST API:
REST:protocol

pahila website mai gayera register/login garnuparthyo vane aba API banayepaxi postman batai data pathauna paiyo

API endpoints:
=>POST http://127.0.0.1:5000/api/doLogin/
Parameters:
-email:required:Email of registered user
-psw:required:password of registered user

e.g Payload{
    "email":"your email"
    "psw":"your password"
}

Response:
loggedIn:returns true or false based on login status
message:a message after login is attempted
token:token to be used for authorization


=>POST  http://127.0.0.1:5000/api/doRegister/
=>GET  http://127.0.0.1:5000//api/treks/

=>POST  http://127.0.0.1:5000/api/doAddTrek/
Parameters:
-title:required::text::title of trek destination
-days:required::number::number of days required for trek destination
-difficulty: required ::text::difficulty   of destination
-total_cost:required::number::total cost  of destination


e.g Payload{
    "title":"your title"
    "days":<days> (integer)
    "difficulty":"your difficulty"
    "total_cost":<total_cost> (integer)
}

Response:

message:a message after adding trek destination is attempted

API endpoints:
1.Register=> POST-  /api/doRegister
2.Login=> POST-  /api/doLogin
3.All treks=> GET-  /api/treks
4.Add trek=> POST-  /api/doAddTrek
5.Edit Trek=> PUT-  /api/doUpdateTrek
{
    "trekId":10,
    "title":"tilicho lake trek",
    "days":5,
    "difficulty":"level 1",
    "total_cost":15000,
    "token":"6e13ac4a-eafd-4d55-8d21-0efba897be2e"
}
6.Delete=> DELETE-  /api/doDeleteTrek
{
    "trekId":10,
    "token":"6e13ac4a-eafd-4d55-8d21-0efba897be2e"
}


##REST FRAMEWORK-> single resource ko through work garna sakxau single endpoint
Resource:Trek
1.All Treks: /api/treks  =>GET
2.Add Trek : /api/treks  =>POST
3.Update trek: /api/treks =>PUT
4. Delete trek: /api/treks =>DELETE

Resource:Iternaries

/rest/iternaries
GET  /rest/iternaries
POST  /rest/iternaries
UPDATE  /rest/iternaries
DELETE  /rest/iternaries



